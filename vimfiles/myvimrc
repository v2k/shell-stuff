set nocompatible              " be iMproved
filetype off                  " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" " required! 
" Bundle 'gmarik/vundle'
"
" " My bundles here:
" "
" " original repos on GitHub
Bundle 'tpope/vim-fugitive'
Bundle 'kien/ctrlp.vim'

" Bundle 'Lokaltog/vim-easymotion'
" Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}
" Bundle 'tpope/vim-rails.git'
" " vim-scripts repos
" Bundle 'L9'
" Bundle 'FuzzyFinder'
" " non-GitHub repos
" Bundle 'git://git.wincent.com/command-t.git'
" " Git repos on your local machine (i.e. when working on your own plugin)
" Bundle 'file:///Users/gmarik/path/to/plugin'
" " ...
"
" filetype plugin indent on     " required!
" "
" " Brief help
" " :BundleList          - list configured bundles
" " :BundleInstall(!)    - install (update) bundles
" " :BundleSearch(!) foo - search (or refresh cache first) for foo
" " :BundleClean(!)      - confirm (or auto-approve) removal of unused
" bundles
" "
" " see :h vundle for more details or wiki for FAQ
" " NOTE: comments after Bundle commands are not allowed.

" 
" Tips/Tricks from SO: http://stackoverflow.com/questions/164847/what-is-in-your-vimrc

" ctrl-p - https://github.com/kien/ctrlp.vim
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_custom_ignore = {
      \ 'dir':  '\v[\/]\.(git|hg|svn)$',
        \ 'file': '\v\.(exe|so|dll)$',
          \ 'link': 'some_bad_symbolic_links',
            \ }

filetype on
filetype plugin on
syntax enable

" Cool tab completion stuff
" tips: http://www.dickscheid.net/2011/04/17-vimsWildmenu/
set wildmenu
set wildmode=list:longest,full

" Turn on spell checking, but off by default
if version >= 700
   set spl=en spell
   set nospell
endif

" Who doesn't like autoindent?
set autoindent

" Spaces are better than a tab character
set expandtab
set smarttab

" Who wants an 8 character tab?  Not me!
set shiftwidth=4
set softtabstop=4

" Line Numbers PWN!
"set number

" Ignore cases in searches
set ignorecase

" if search pattern contains an upper case char, it will do a case-sensitive
" search
set smartcase

"Status line gnarliness
set laststatus=2
"set statusline=%F%m%r%h%w\ (%{&ff}){%Y}\ [%l,%v][%p%%]
set statusline=\ %F%m%r%h\ %w\ \ CWD:\ %r%{getcwd()}%h\ \ \ Line:\ %l/%L:%c

"Working/Backup Directories
set backup
set backupdir=~/.vim/backup
set directory=~/.vim/tmp

" Automatically change working dir. to the one the file is in
"set autochdir

" from v2k's vimrc file
colo tango
"colo pablo " better in shell
set vi^=!
set nobackup
set noswapfile
set tabstop=4
set shiftwidth=4
set cindent
set nolist
set bs=2
set hlsearch
set guifont=courier_new:h9
nmap <leader>fb :call fuf#setOneTimeVariables(['g:fuf_coveragefile_globPatterns', ['**/*.cs','**/*.php']]) <CR> :FufCoverageFile <CR>
"save readonly file
nmap <leader>ss :w !sudo tee %<CR>
syntax on

behave mswin

" use fuzzy finder to find files under local dir
"highlight PmenuSel ctermbg=blue ctermfg=cyan guibg=blue guifg=cyan
"highlight Pmenu ctermbg=darkblue guibg=darkblue ctermfg=grey guifg=grey
"highlight Error ctermbg=darkblue guibg=darkblue ctermfg=yellow guifg=yellow
"
"nmap <leader>f :FufFile **/*<CR>
"nmap <leader>b :FufBuffer<CR>
"nmap <leader>t :FufTag<CR>
"nmap <leader>l :FufLine<CR>
"noremap <silent> <C-]> :FufTagWithCursorWord!<CR>
"
"nmap <leader>ff :call fuf#setOneTimeVariables(['g:fuf_coveragefile_globPatterns', ['**/*.cs','**/*.php']]) <CR> :FufCoverageFile <CR>
""set guifont=courier_new:h9
" clean up whitE
nmap <leader>ww :%s/\s\+$//ge <bar> %s/ )/)/ge <bar> %s/( /(/ge <bar> %s/if(/if (/ge <bar> %s/for(/for (/ge <bar> %s/foreach(/foreach (/geI <bar> %s/while(/while (/ge <bar> %s/\r//ge <bar> retab <cr>
nmap <leader>w :%s/\s\+$//ge<cr>
"%s///ge <cr>

"| %s/( /(//g | %s/ )/)//g | %s/if (/if (//g | %s/for(/for( //g<CR>
nmap <leader>tt :retab<CR>
nmap <leader>ee :%s/\r//g<CR>
nmap <leader>gg :Ggrep 
nmap <C-Tab> :bp<CR>
nmap <C-S-Tab> :bn<CR>
"need to fix this for windows
nmap <leader>s :source $MYVIMRC<CR>
nmap <leader>e :e $MYVIMRC<CR>

"set paste " this breaks fuzzyfinder

set iskeyword=@,48-57,_,192-255
" fugitive hotkeys
nmap <leader>gb :Gblame<CR>
nmap <leader>gs :Gstatus<CR>
nmap <leader>gd :Gdiff<CR>
autocmd QuickFixCmdPost *grep* cwindow

" fix for word matching on: this.function
"set iskeyword+=\.
